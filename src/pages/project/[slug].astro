---
import Layout from '../../layouts/Layout.astro';
import Container from '../../layouts/Container.tsx';
import { projects } from '../../data/data';
import { slugify } from '../../utils/slugify';
import type { Project } from '../../types/project';

interface Props {
  slug: string;
}

export async function getStaticPaths() {
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { slug } = Astro.params;
const project = projects.find(p => p.slug === slug);
const currentIndex = projects.findIndex(p => p.slug === slug);
const prevProject = currentIndex > 0 ? projects[currentIndex - 1] : null;
const nextProject = currentIndex < projects.length - 1 ? projects[currentIndex + 1] : null;

if (!project) {
  return Astro.redirect('/404');
}

// SEO Metadata
const title = `${project.metadata.title} | Export3D`;
const description = project.metadata.description || `Proyecto de ${project.metadata.buildingType} en ${project.metadata.location}`;
---

<Layout>
  <Container classNames="relative min-h-[max-content] overflow-hidden">
    {/* Background effects */}
    <div class="absolute inset-0 z-0">
      <div class="absolute inset-0 bg-gradient-to-b from-darkgray/50 to-darkgray"></div>
      <div class="absolute inset-0 bg-[radial-gradient(circle_at_center,rgba(255,255,255,0.03)_0%,transparent_70%)]"></div>
    </div>

    {/* Content */}
    <div class="relative z-10">
      <div class="px-20 py-32">
        {/* Project Header */}
        <div class="mb-16">
          <h1 class="text-[4.5rem] leading-[1.1] font-semibold tracking-tight text-white font-kuunari-medium">
            {project.metadata.title}
          </h1>
          <p class="mt-4 text-xl text-white/80 font-kuunari-light">
            {project.metadata.location}
          </p>
        </div>

        {/* Main Image */}
        <div class="relative aspect-[16/9] overflow-hidden rounded-lg mb-16">
          <img
            src={project.image.src}
            alt={project.metadata.title}
            class="w-full h-full object-cover"
          />
        </div>

        {/* Project Details */}
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-16 mb-16">
          <div class="lg:col-span-2">
            <h2 class="text-2xl font-kuunari-medium text-white mb-6">Descripción</h2>
            <p class="text-lg text-white/80 font-kuunari-light">
              {project.metadata.description}
            </p>
          </div>
          <div>
            <h2 class="text-2xl font-kuunari-medium text-white mb-6">Detalles</h2>
            <dl class="space-y-4">
              <div>
                <dt class="text-white/60 font-kuunari-light">Cliente</dt>
                <dd class="text-white font-kuunari-medium">{project.metadata.client}</dd>
              </div>
              <div>
                <dt class="text-white/60 font-kuunari-light">Rol</dt>
                <dd class="text-white font-kuunari-medium">{project.metadata.role}</dd>
              </div>
              <div>
                <dt class="text-white/60 font-kuunari-light">Tipo</dt>
                <dd class="text-white font-kuunari-medium">{project.metadata.buildingType}</dd>
              </div>
              <div>
                <dt class="text-white/60 font-kuunari-light">Fecha</dt>
                <dd class="text-white font-kuunari-medium">{project.metadata.date}</dd>
              </div>
            </dl>
          </div>
        </div>

        {/* Gallery */}
        {project.gallery && project.gallery.length > 0 && (
          <div class="mb-16">
            <h2 class="text-2xl font-kuunari-medium text-white mb-6">Galería</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {project.gallery.map((image) => (
                <div class="relative aspect-[4/3] overflow-hidden rounded-lg">
                  <img
                    src={image.src}
                    alt={`${project.metadata.title} - Imagen adicional`}
                    class="w-full h-full object-cover"
                  />
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Navigation */}
        <div class="flex justify-between items-center border-t border-white/10 pt-8">
          {prevProject && (
            <a
              href={`/project/${prevProject.slug}`}
              class="group flex items-center text-white/60 hover:text-accent-500 transition-colors"
            >
              <svg
                class="mr-2 h-5 w-5"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 19l-7-7 7-7"
                />
              </svg>
              <span class="font-kuunari-medium">Proyecto anterior</span>
            </a>
          )}
          {nextProject && (
            <a
              href={`/project/${nextProject.slug}`}
              class="group flex items-center text-white/60 hover:text-accent-500 transition-colors"
            >
              <span class="font-kuunari-medium">Siguiente proyecto</span>
              <svg
                class="ml-2 h-5 w-5"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 5l7 7-7 7"
                />
              </svg>
            </a>
          )}
        </div>
      </div>
    </div>
  </Container>
</Layout>

<script>
  // Add any client-side interactivity here
</script>

<style>
  /* Add any custom styles here */
</style> 