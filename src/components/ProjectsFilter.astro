---
import { useState } from "react";
import { projects, tags } from "../data/data";
import ProjectList from "./ProjectList.astro";

const filters = Object.keys(tags).map((key) => ({
  id: key,
  name: key.charAt(0).toUpperCase() + key.slice(1),
  options: tags[key].map((value) => ({
    value: value,
    label: value,
  })),
}));

const [selectedFilters, setSelectedFilters] = useState({});
---

<div class="bg-white">
  <div>
    <main
      class="mx-auto max-w-2xl px-4 py-16 sm:px-6 sm:py-24 lg:max-w-7xl lg:px-8"
    >
      <div class="border-b border-gray-200 pb-10">
        <h1 class="text-4xl font-bold tracking-tight text-gray-900">
          New Arrivals
        </h1>
        <p class="mt-4 text-base text-gray-500">
          Checkout out the latest release of Basic Tees, new and improved with
          four openings!
        </p>
      </div>

      <div class="pt-12 lg:grid lg:grid-cols-3 lg:gap-x-8 xl:grid-cols-4">
        <aside>
          <h2 class="sr-only">Filters</h2>

          <div class="hidden lg:block">
            <form class="divide-y divide-gray-200">
              {
                filters.map((section) => (
                  <div key={section.name} class="py-10 first:pt-0 last:pb-0">
                    <fieldset>
                      <legend class="block text-sm font-medium text-gray-900">
                        {section.name}
                      </legend>
                      <div class="space-y-3 pt-6">
                        {section.options.map((option, optionIdx) => (
                          <div key={option.value} class="flex gap-3">
                            <div class="flex h-5 shrink-0 items-center">
                              <div class="group grid size-4 grid-cols-1">
                                <input
                                  defaultValue={option.value}
                                  id={`${section.id}-${optionIdx}`}
                                  name={`${section.id}[]`}
                                  type="checkbox"
                                  data-filter={section.id}
                                  data-value={option.value}
                                  class="col-start-1 row-start-1 appearance-none rounded border border-gray-300 bg-white checked:border-indigo-600 checked:bg-indigo-600 indeterminate:border-indigo-600 indeterminate:bg-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto"
                                />
                                <svg
                                  fill="none"
                                  viewBox="0 0 14 14"
                                  class="pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-[:disabled]:stroke-gray-950/25"
                                >
                                  <path
                                    d="M3 8L6 11L11 3.5"
                                    strokeWidth={2}
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    class="opacity-0 group-has-[:checked]:opacity-100"
                                  />
                                  <path
                                    d="M3 7H11"
                                    strokeWidth={2}
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    class="opacity-0 group-has-[:indeterminate]:opacity-100"
                                  />
                                </svg>
                              </div>
                            </div>
                            <label
                              htmlFor={`${section.id}-${optionIdx}`}
                              class="text-sm text-gray-600"
                            >
                              {option.label}
                            </label>
                          </div>
                        ))}
                      </div>
                    </fieldset>
                  </div>
                ))
              }
            </form>
          </div>
        </aside>

        {/* Product grid */}
        <div class="mt-6 lg:col-span-2 lg:mt-0 xl:col-span-3">
          <ProjectList projects={projects} />
        </div>
      </div>
    </main>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const checkboxes = document.querySelectorAll(
      'input[type="checkbox"][data-filter]'
    );
    const projectList = document.querySelector("ProjectList");

    checkboxes.forEach((checkbox) => {
      checkbox.addEventListener("change", () => {
        const selectedFilters = {};

        checkboxes.forEach((cb) => {
          if (cb.checked) {
            const filter = cb.getAttribute("data-filter");
            const value = cb.getAttribute("data-value");
            if (!selectedFilters[filter]) {
              selectedFilters[filter] = [];
            }
            selectedFilters[filter].push(value);
          }
        });

        const filteredProjects = projects.filter((project) => {
          return Object.keys(selectedFilters).every((filterKey) => {
            if (!selectedFilters[filterKey].length) return true;
            return selectedFilters[filterKey].some((filterValue) =>
              project.metadata[filterKey]?.includes(filterValue)
            );
          });
        });

        projectList.setAttribute("projects", JSON.stringify(filteredProjects));
      });
    });
  });
</script>
