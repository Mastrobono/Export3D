---
import background from "../assets/background.webp";
import Container from "../layouts/Container";
import { useTranslations } from "../i18n/utils";
import { ui } from "../i18n/ui";

const { lang } = Astro.props;
const t = useTranslations(lang);

// Función para procesar el texto con palabras resaltadas
function processHighlightedText(text: string, lang: keyof typeof ui) {
  const highlightedWords = ui[lang]["hero.highlighted"];
  let processedText = text;

  Object.entries(highlightedWords).forEach(([key, word]) => {
    const placeholder = `{${key}}`;
    const highlightedWord = `<span class="text-accent-500">${word}</span>`;
    processedText = processedText.replace(placeholder, highlightedWord);
  });

  return processedText;
}

const subtitle = processHighlightedText(t("hero.subtitle") as string, lang);
---

<Container
  id="hero"
  classNames="mt-12 mb-12 relative max-w-7xl lg:max-w-8xl min-[1800px]:max-w-[1800px] rounded-md"
>
  <div id="hero-container" class="relative h-[90vh] overflow-hidden rounded-md">
    {/* Background with effects */}
    <div class="absolute inset-0 z-0">
      <div id="parallax-image" class="relative w-full h-full">
        <img
          class="w-full h-full object-cover object-[center_65%] rounded-md"
          src={background.src}
          alt="Architectural visualization"
          fetchpriority="high"
        />
      </div>

      {/* Dark overlay with radial transparency */}
      <div class="absolute inset-0 radial-dark-overlay"></div>
      <div class="mobile-vertical-overlay"></div>

      {/* Spotlight effect */}
      <div
        id="spotlight"
        class="absolute inset-0 pointer-events-none mix-blend-soft-light"
      >
        <div
          class="absolute spotlight-glow opacity-0 transition-opacity duration-500"
        >
        </div>
      </div>

      {/* Bottom dark overlay for smooth transition */}
      <div
        class="absolute bottom-0 left-0 right-0 h-32 bg-gradient-to-t from-darkgray to-transparent"
      >
      </div>
    </div>

    {/* Main Content */}
    <main class="relative z-10 h-[90vh]">
      {/* Content container for better mobile layout */}
      <div class="absolute inset-0 flex flex-col lg:block w-full">
        {/* Left-aligned content */}
        <div
          class="relative min-[1130px]:absolute bottom-auto min-[1130px]:bottom-32 left-0 sm:left-4 min-[1130px]:left-12 px-6 min-[1130px]:px-0 text-left z-20 mt-20 min-[1130px]::mt-0"
        >
          {/* Main title */}
          <h1
            class="text-[6rem] sm:text-[8rem] min-[1130px]:text-[12rem] text-white leading-[1] font-kuunari-bold tracking-[-6px] sm:tracking-[-10px] min-[1130px]:tracking-[-12px] drop-shadow-[0_4px_20px_rgba(0,0,0,0.4)] main-title ml-[-6px] sm:ml-[-8px]"
          >
            Export<span class="text-accent-500">3d</span><span class="period"
              >.</span
            >
          </h1>

          {/* Subtitle */}
          <p
            class="mt-6 text-[24px] sm:text-[28px] lg:text-[32px] tracking-[.7px] font-kuunari-light text-white/90 max-w-2xl subtitle-text mt-[-2px] min-[1130px]:mt-0"
            set:html={subtitle}
          />
        </div>

        {/* Right column with marketing text */}
        <div
          class="absolute bottom-10 min-[1130px]:bottom-32 left-0 sm:left-4 min-[1130px]:right-12 min-[1130px]:left-auto px-6 min-[1130px]:px-0 text-left min-[1130px]:text-right max-w-full lg:max-w-md marketing-text flex flex-col justify-start z-20 mt-12 lg:mt-0"
        >
          <div class="space-y-6">
            <p
              class="text-[20px] sm:text-[24px] lg:text-[28px] leading-[1.1] font-kuunari-medium text-white/90"
            >
              {t("hero.description")}
            </p>

            <div class="space-y-4">
              <div class="flex items-center min-[1130px]:justify-end gap-3">
                <span class="text-accent-500 text-lg">01</span>
                <p class="text-white/60 text-lg">{t("hero.service1")}</p>
              </div>
              <div class="flex items-center min-[1130px]:justify-end gap-3">
                <span class="text-accent-500 text-lg">02</span>
                <p class="text-white/60 text-lg">{t("hero.service2")}</p>
              </div>
            </div>

            <button
              class="mt-8 inline-flex items-center gap-2 text-accent-500 hover:text-white transition-colors duration-300 group descubrimas-btn"
              type="button"
            >
              <span
                class="text-base uppercase tracking-widest font-kuunari-regular"
                >{t("hero.cta")}</span
              >
              <svg
                class="w-5 h-5 transform group-hover:translate-y-1 transition-transform rotate-90"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M5 12H19M19 12L12 5M19 12L12 19"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
            </button>
          </div>
        </div>
      </div>

      {/* Wave divider */}
      <div
        class="absolute -bottom-1 left-0 right-0 w-full z-10 overflow-hidden"
      >
        <svg
          class="relative block w-full h-[180px]"
          viewBox="0 0 1200 120"
          preserveAspectRatio="none"
        >
          <path
            d="M600,0L400,60L200,30L0,40L0,120L1200,120L1200,40L1000,30L800,60L600,0Z"
            class="fill-darkgray divider-pattern"></path>
          <path
            d="M600,20L450,70L250,45L0,50L0,120L1200,120L1200,50L950,45L750,70L600,20Z"
            class="fill-darkgray/70 divider-pattern"></path>
          <path
            d="M600,40L500,80L300,60L0,65L0,120L1200,120L1200,65L900,60L700,80L600,40Z"
            class="fill-darkgray/40 divider-pattern"></path>
        </svg>
      </div>

      {/* Additional dark gradient for smooth transition */}
      <div
        class="absolute bottom-0 left-0 right-0 h-48 bg-gradient-to-t from-darkgray via-darkgray/80 to-transparent z-[5]"
      >
      </div>
    </main>
  </div>
</Container>

<script>
  const heroContainer = document.getElementById(
    "hero-container",
  ) as HTMLDivElement;
  const spotlight = document
    .getElementById("spotlight")
    ?.querySelector(".spotlight-glow") as HTMLDivElement;

  if (heroContainer && spotlight) {
    let spotlightTimeout: ReturnType<typeof setTimeout>;

    heroContainer.addEventListener("mousemove", (e) => {
      const rect = heroContainer.getBoundingClientRect();

      // Update spotlight
      clearTimeout(spotlightTimeout);
      const cursorX = e.clientX - rect.left - 400;
      const cursorY = e.clientY - rect.top - 400;
      spotlight.style.opacity = "1";
      spotlight.style.transform = `translate3d(${cursorX}px, ${cursorY}px, 0)`;
    });

    heroContainer.addEventListener("mouseleave", () => {
      spotlight.style.opacity = "0";
      spotlightTimeout = setTimeout(() => {
        spotlight.style.transform = "translate(-100%, -100%)";
      }, 500);
    });
  }

  // Scroll to services functionality
  const scrollButton = document.querySelector(".scroll-to-about");
  const servicesSection = document.getElementById("about");

  if (scrollButton && servicesSection) {
    scrollButton.addEventListener("click", () => {
      const rect = servicesSection.getBoundingClientRect();
      const scrollTop =
        window.pageYOffset || document.documentElement.scrollTop;
      // Offset específico para dejar espacio arriba
      const offset = -120;
      window.scrollTo({
        top: rect.top + scrollTop + offset,
        behavior: "smooth",
      });
    });
  }

  function restartAnimation(el: HTMLElement | null, className: string) {
    if (!el) return;
    el.classList.remove(className);
    void el.offsetWidth;
    el.classList.add(className);
  }

  // Ejecutar las animaciones una sola vez cuando el DOM esté listo
  document.addEventListener("DOMContentLoaded", () => {
    const mainTitle = document.querySelector(
      ".main-title",
    ) as HTMLElement | null;
    const subtitleText = document.querySelector(
      ".subtitle-text",
    ) as HTMLElement | null;
    const marketingText = document.querySelector(
      ".marketing-text",
    ) as HTMLElement | null;

    // Aplicar animaciones con delays
    if (mainTitle) {
      mainTitle.classList.add("animate-fade-in-up");
    }

    if (subtitleText) {
      subtitleText.classList.add("animate-fade-in-up");
    }

    if (marketingText) {
      marketingText.classList.add("animate-fade-in-up");
    }
  });

  // Descubrí más scroll functionality
  const descubrimasBtn = document.querySelector(".descubrimas-btn");
  if (descubrimasBtn && servicesSection) {
    descubrimasBtn.addEventListener("click", () => {
      const rect = servicesSection.getBoundingClientRect();
      const scrollTop =
        window.pageYOffset || document.documentElement.scrollTop;
      const offset = -120;
      window.scrollTo({
        top: rect.top + scrollTop + offset,
        behavior: "smooth",
      });
    });
  }
</script>

<style>
  /* Radial dark overlay with initial state */
  .radial-dark-overlay {
    position: relative;
    background: radial-gradient(
      circle at center,
      rgba(16, 16, 16, 0.8) 0%,
      rgba(16, 16, 16, 0.9) 40%,
      rgba(16, 16, 16, 1) 100%
    );
    z-index: 1;
  }

  .radial-dark-overlay::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      circle at center,
      rgba(16, 16, 16, 0.2) 0%,
      rgba(16, 16, 16, 0.3) 40%,
      rgba(16, 16, 16, 0.6) 100%
    );
    animation: revealFromLeft 2s ease-out forwards;
    z-index: 2;
  }

  /* Initial dark overlay */
  #hero-container::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 1);
    z-index: 1;
    animation: fadeOut 2s ease-out forwards;
  }

  /* Main content container */
  main {
    position: relative;
    z-index: 10;
  }

  /* Typewriter animation for main title */
  .main-title {
    opacity: 0;
    position: relative;
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid transparent;
  }

  .main-title.animate-fade-in-up {
    animation:
      typewriter 1s steps(40) 1s forwards,
      blinkCursor 0.7s steps(2) 1s 1 forwards;
  }

  /* 3d part animation */
  .main-title .text-accent-500 {
    opacity: 0;
    display: inline-block;
    animation: fadeInDown 0.5s ease-out 2.2s forwards;
  }

  /* Period animation */
  .main-title .period {
    opacity: 0;
    display: inline-block;
    color: white;
    animation: fadeIn 0.3s ease-out 2.8s forwards;
    min-width: 50px;
  }

  /* Remove any existing period */
  .main-title::after {
    content: none;
  }

  /* Subtitle animation */
  .subtitle-text {
    opacity: 0;
    position: relative;
  }

  .subtitle-text.animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out 3.1s forwards;
  }

  /* Marketing text container positioning */
  .marketing-text {
    max-width: 400px;
    z-index: 20;
  }

  /* Marketing text animations */
  .marketing-text.animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out 3s forwards;
  }

  .marketing-text > div > p {
    opacity: 0;
    animation: slideInRight 0.8s ease-out forwards;
  }

  .marketing-text > div > p:nth-child(1) {
    animation-delay: 3.6s;
  }

  .marketing-text > div > p:nth-child(2) {
    animation-delay: 3.8s;
  }

  /* Service numbers and text */
  .marketing-text .flex {
    opacity: 0;
    animation: slideInRight 0.8s ease-out forwards;
  }

  .marketing-text .flex:nth-child(1) {
    animation-delay: 3.6s;
  }

  .marketing-text .flex:nth-child(2) {
    animation-delay: 3.8s;
  }

  /* CTA button with enhanced animation */
  .descubrimas-btn {
    opacity: 0;
    animation: fadeInUp 0.8s ease-out 3.7s forwards;
    position: relative;
  }

  .descubrimas-btn::after {
    content: "";
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 1px;
    background-color: currentColor;
    animation: lineGrow 0.5s ease-out 4.4s forwards;
  }

  .descubrimas-btn:hover::after {
    width: 100%;
  }

  .descubrimas-btn svg {
    transform: rotate(90deg);
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes revealFromLeft {
    from {
      clip-path: inset(0 100% 0 0);
    }
    to {
      clip-path: inset(0 0 0 0);
    }
  }

  @keyframes typewriter {
    0% {
      width: 0;
      opacity: 1;
    }
    20% {
      width: 20%;
    }
    40% {
      width: 40%;
    }
    60% {
      width: 60%;
    }
    80% {
      width: 80%;
    }
    100% {
      width: 100%;
      opacity: 1;
    }
  }

  @keyframes blinkCursor {
    0%,
    100% {
      border-right-color: transparent;
    }
    50% {
      border-right-color: #fff;
    }
  }

  @keyframes fadeInDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes lineGrow {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  /* Spotlight effect */
  .spotlight-glow {
    width: 800px;
    height: 800px;
    border-radius: 50%;
    background: radial-gradient(
      circle at center,
      rgba(255, 255, 255, 0.25) 0%,
      rgba(255, 255, 255, 0.15) 20%,
      rgba(255, 255, 255, 0.1) 30%,
      transparent 70%
    );
    transform-origin: center;
    will-change: transform, opacity;
    pointer-events: none;
  }

  /* Scroll line animation */
  .scroll-line {
    animation: scrollPulse 2s ease-in-out infinite;
  }

  @keyframes scrollPulse {
    0%,
    100% {
      transform: scaleY(0.5);
      opacity: 0.5;
    }
    50% {
      transform: scaleY(1);
      opacity: 1;
    }
  }

  /* Divider pattern and animation */
  .divider-pattern {
    mask-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='1' cy='1' r='0.5' fill='%23000'/%3E%3C/svg%3E");
    mask-size: 12px 12px;
    animation: patternFloat 15s linear infinite;
  }

  @keyframes patternFloat {
    0% {
      mask-position: 0 0;
    }
    100% {
      mask-position: 100px 0;
    }
  }

  /* Animation classes */
  .animate-fade-in-up-last {
    animation: fadeInUp 0.8s ease-out 2.1s forwards;
    opacity: 0;
  }

  /* SVG animation */
  .eyebrow-text svg {
    animation: float 3s ease-in-out infinite;
  }

  @keyframes float {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-5px);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @media (max-width: 1130px) {
    .mobile-vertical-overlay {
      position: absolute;
      inset: 0;
      z-index: 2;
      pointer-events: none;
      background: linear-gradient(
        to bottom,
        rgba(16, 16, 16, 0.95) 0%,
        rgba(16, 16, 16, 0.85) 20%,
        rgba(16, 16, 16, 0.1) 35%,
        rgba(16, 16, 16, 0.1) 65%,
        rgba(16, 16, 16, 0.85) 80%,
        rgba(16, 16, 16, 0.95) 100%
      );
    }
  }
</style>
